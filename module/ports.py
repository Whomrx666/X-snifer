# Obfuscated by Mr.X
# dont recode this kids:V
import base64
exec(base64.b64decode('IyBUaGlzIHByb2dyYW0gd2FzIGNyZWF0ZWQgYnkgTXIuWAoKaW1wb3J0IHNvY2tldApmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yLCBhc19jb21wbGV0ZWQKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUKZnJvbSByaWNoLnByb2dyZXNzIGltcG9ydCBQcm9ncmVzcwpmcm9tIHJpY2gucHJvbXB0IGltcG9ydCBQcm9tcHQKaW1wb3J0IHJlCmltcG9ydCBzeXMKaW1wb3J0IG9zCgpBU0NJSV9BUlQgPSByIiIiCiAgICAgICAgICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAKICBfIF9fICAgX19fICBfIF9ffCB8XyAgIF9fXyAgX19fIF9fIF8gXyBfXyAgCiB8ICdfIFwgLyBfIFx8ICdfX3wgX198IC8gX198LyBfXy8gX2AgfCAnXyBcIAogfCB8XykgfCAoXykgfCB8ICB8IHxfICBcX18gXCAoX3wgKF98IHwgfCB8IHwKIHwgLl9fLyBcX19fL3xffCAgIFxfX3wgfF9fXy9cX19fXF9fLF98X3wgfF98CiB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogfF98ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgVG9vbHMgYnkgTXIuWAoiIiIKCmNvbnNvbGUgPSBDb25zb2xlKCkKCmRlZiBpc192YWxpZF9pcChpcCk6CiAgICB0cnk6CiAgICAgICAgc29ja2V0LmluZXRfcHRvbihzb2NrZXQuQUZfSU5FVCwgaXApCiAgICAgICAgcmV0dXJuIFRydWUKICAgIGV4Y2VwdCBzb2NrZXQuZXJyb3I6CiAgICAgICAgcmV0dXJuIEZhbHNlCgpkZWYgaXNfdmFsaWRfcG9ydChwb3J0KToKICAgIHJldHVybiAxIDw9IHBvcnQgPD0gNjU1MzUKCmRlZiBzY2FuX3BvcnQoaXAsIHBvcnQsIHRpbWVvdXQ9MSk6CiAgICB3aXRoIHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkgYXMgc29jazoKICAgICAgICBzb2NrLnNldHRpbWVvdXQodGltZW91dCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJlc3VsdCA9IHNvY2suY29ubmVjdF9leCgoaXAsIHBvcnQpKQogICAgICAgICAgICByZXR1cm4gcG9ydCwgcmVzdWx0ID09IDAKICAgICAgICBleGNlcHQgKHNvY2tldC5lcnJvciwgT1NFcnJvcikgYXMgZToKICAgICAgICAgICAgY29uc29sZS5wcmludChmIkVycm9yIHNjYW5uaW5nIHBvcnQge3BvcnR9OiB7ZX0iLCBzdHlsZT0iYm9sZCByZWQiKQogICAgICAgICAgICByZXR1cm4gcG9ydCwgRmFsc2UKCmRlZiBzY2FuX3BvcnRzKGlwLCBwb3J0cywgdGltZW91dD0xLCBtYXhfd29ya2Vycz0xMDApOgogICAgb3Blbl9wb3J0cyA9IFtdCiAgICB3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz1tYXhfd29ya2VycykgYXMgZXhlY3V0b3I6CiAgICAgICAgZnV0dXJlcyA9IHtleGVjdXRvci5zdWJtaXQoc2Nhbl9wb3J0LCBpcCwgcG9ydCwgdGltZW91dCk6IHBvcnQgZm9yIHBvcnQgaW4gcG9ydHN9CiAgICAgICAgd2l0aCBQcm9ncmVzcygpIGFzIHByb2dyZXNzOgogICAgICAgICAgICB0YXNrID0gcHJvZ3Jlc3MuYWRkX3Rhc2soIltjeWFuXVNjYW5uaW5nIHBvcnRzLi4uIiwgdG90YWw9bGVuKHBvcnRzKSkKICAgICAgICAgICAgZm9yIGZ1dHVyZSBpbiBhc19jb21wbGV0ZWQoZnV0dXJlcyk6CiAgICAgICAgICAgICAgICBwb3J0LCBpc19vcGVuID0gZnV0dXJlLnJlc3VsdCgpCiAgICAgICAgICAgICAgICBpZiBpc19vcGVuOgogICAgICAgICAgICAgICAgICAgIG9wZW5fcG9ydHMuYXBwZW5kKHBvcnQpCiAgICAgICAgICAgICAgICBwcm9ncmVzcy51cGRhdGUodGFzaywgYWR2YW5jZT0xKQogICAgcmV0dXJuIG9wZW5fcG9ydHMKCmRlZiBwcmludF9iYW5uZXIoKToKICAgIGNvbnNvbGUucHJpbnQoQVNDSUlfQVJULCBzdHlsZT0iYm9sZCBjeWFuIikKCmRlZiBnZXRfaXAoKToKICAgIHdoaWxlIFRydWU6CiAgICAgICAgaXAgPSBQcm9tcHQuYXNrKCJFbnRlciB0aGUgSVAgYWRkcmVzcyB0byBzY2FuIikuc3RyaXAoKQogICAgICAgIGlmIGlzX3ZhbGlkX2lwKGlwKToKICAgICAgICAgICAgcmV0dXJuIGlwCiAgICAgICAgZWxzZToKICAgICAgICAgICAgY29uc29sZS5wcmludCgiSW52YWxpZCBJUCBhZGRyZXNzLiBQbGVhc2UgZW50ZXIgYSB2YWxpZCBJUCBhZGRyZXNzLiIsIHN0eWxlPSJib2xkIHJlZCIpCgpkZWYgZ2V0X3BvcnRfcmFuZ2UoKToKICAgIHdoaWxlIFRydWU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBzdGFydF9wb3J0ID0gaW50KFByb21wdC5hc2soIkVudGVyIHRoZSBzdGFydGluZyBwb3J0IikpCiAgICAgICAgICAgIGVuZF9wb3J0ID0gaW50KFByb21wdC5hc2soIkVudGVyIHRoZSBlbmRpbmcgcG9ydCIpKQogICAgICAgICAgICBpZiBpc192YWxpZF9wb3J0KHN0YXJ0X3BvcnQpIGFuZCBpc192YWxpZF9wb3J0KGVuZF9wb3J0KSBhbmQgc3RhcnRfcG9ydCA8PSBlbmRfcG9ydDoKICAgICAgICAgICAgICAgIHJldHVybiByYW5nZShzdGFydF9wb3J0LCBlbmRfcG9ydCArIDEpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjb25zb2xlLnByaW50KCJJbnZhbGlkIHBvcnQgcmFuZ2UuIE11c3QgYmUgYmV0d2VlbiAxIGFuZCA2NTUzNSwgYW5kIHRoZSBzdGFydGluZyBwb3J0IG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSBlbmRpbmcgcG9ydC4iLCBzdHlsZT0iYm9sZCByZWQiKQogICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICBjb25zb2xlLnByaW50KCJJbnZhbGlkIGlucHV0LiBQbGVhc2UgZW50ZXIgaW50ZWdlciBudW1iZXJzIGZvciB0aGUgcG9ydHMuIiwgc3R5bGU9ImJvbGQgcmVkIikKCmRlZiBnZXRfdGltZW91dCgpOgogICAgd2hpbGUgVHJ1ZToKICAgICAgICB0cnk6CiAgICAgICAgICAgIHRpbWVvdXQgPSBmbG9hdChQcm9tcHQuYXNrKCJFbnRlciB0aGUgdGltZW91dCBpbiBzZWNvbmRzIChkZWZhdWx0IDEpIiwgZGVmYXVsdD0iMSIpLnN0cmlwKCkpCiAgICAgICAgICAgIGlmIHRpbWVvdXQgPiAwOgogICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVvdXQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbnNvbGUucHJpbnQoIlRpbWVvdXQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlci4iLCBzdHlsZT0iYm9sZCByZWQiKQogICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICBjb25zb2xlLnByaW50KCJJbnZhbGlkIGlucHV0LiBQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXIgZm9yIHRoZSB0aW1lb3V0LiIsIHN0eWxlPSJib2xkIHJlZCIpCgpkZWYgZ2V0X21heF93b3JrZXJzKCk6CiAgICB3aGlsZSBUcnVlOgogICAgICAgIHRyeToKICAgICAgICAgICAgbWF4X3dvcmtlcnMgPSBpbnQoUHJvbXB0LmFzaygiRW50ZXIgdGhlIG1heGltdW0gbnVtYmVyIG9mIHRocmVhZHMgKGRlZmF1bHQgMTAwKSIsIGRlZmF1bHQ9IjEwMCIpLnN0cmlwKCkpCiAgICAgICAgICAgIGlmIDEgPD0gbWF4X3dvcmtlcnMgPD0gNTAwOgogICAgICAgICAgICAgICAgcmV0dXJuIG1heF93b3JrZXJzCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjb25zb2xlLnByaW50KCJOdW1iZXIgb2YgdGhyZWFkcyBtdXN0IGJlIGJldHdlZW4gMSBhbmQgNTAwLiIsIHN0eWxlPSJib2xkIHJlZCIpCiAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgICAgIGNvbnNvbGUucHJpbnQoIkludmFsaWQgaW5wdXQuIFBsZWFzZSBlbnRlciBhIHZhbGlkIGludGVnZXIgZm9yIHRoZSBudW1iZXIgb2YgdGhyZWFkcy4iLCBzdHlsZT0iYm9sZCByZWQiKQoKZGVmIGV4cG9ydF9yZXN1bHRzKGlwLCBvcGVuX3BvcnRzLCBmaWxlX2Zvcm1hdD0ndHh0Jyk6CiAgICBmaWxlX25hbWUgPSBmJ3NjYW5fcmVzdWx0cy57ZmlsZV9mb3JtYXR9JwogICAgaWYgZmlsZV9mb3JtYXQgPT0gJ3R4dCc6CiAgICAgICAgd2l0aCBvcGVuKGZpbGVfbmFtZSwgJ3cnKSBhcyBmaWxlOgogICAgICAgICAgICBmaWxlLndyaXRlKGYiUG9ydCBzY2FuIGZvciB7aXB9XG4iKQogICAgICAgICAgICBpZiBvcGVuX3BvcnRzOgogICAgICAgICAgICAgICAgZmlsZS53cml0ZShmIk9wZW4gcG9ydHM6IHsnLCAnLmpvaW4obWFwKHN0ciwgb3Blbl9wb3J0cykpfVxuIikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGZpbGUud3JpdGUoIk5vIG9wZW4gcG9ydHMgZm91bmQuXG4iKQogICAgZWxpZiBmaWxlX2Zvcm1hdCA9PSAnY3N2JzoKICAgICAgICBpbXBvcnQgY3N2CiAgICAgICAgd2l0aCBvcGVuKGZpbGVfbmFtZSwgJ3cnLCBuZXdsaW5lPScnKSBhcyBmaWxlOgogICAgICAgICAgICB3cml0ZXIgPSBjc3Yud3JpdGVyKGZpbGUpCiAgICAgICAgICAgIHdyaXRlci53cml0ZXJvdyhbJ0lQJywgJ09wZW4gUG9ydHMnXSkKICAgICAgICAgICAgd3JpdGVyLndyaXRlcm93KFtpcCwgJywgJy5qb2luKG1hcChzdHIsIG9wZW5fcG9ydHMpKSBpZiBvcGVuX3BvcnRzIGVsc2UgJ05vbmUnXSkKICAgIGVsc2U6CiAgICAgICAgY29uc29sZS5wcmludChmIkZpbGUgZm9ybWF0IHtmaWxlX2Zvcm1hdH0gbm90IHN1cHBvcnRlZC4iLCBzdHlsZT0iYm9sZCByZWQiKQogICAgICAgIHJldHVybgoKICAgIGNvbnNvbGUucHJpbnQoZiJSZXN1bHRzIGV4cG9ydGVkIHRvICd7ZmlsZV9uYW1lfScuIiwgc3R5bGU9ImJvbGQgYmx1ZSIpCgpkZWYgbWFpbigpOgogICAgcHJpbnRfYmFubmVyKCkKICAgIAogICAgdGFyZ2V0X2lwID0gZ2V0X2lwKCkKICAgIHBvcnRfcmFuZ2UgPSBnZXRfcG9ydF9yYW5nZSgpCiAgICB0aW1lb3V0ID0gZ2V0X3RpbWVvdXQoKQogICAgbWF4X3dvcmtlcnMgPSBnZXRfbWF4X3dvcmtlcnMoKQogICAgCiAgICBjb25zb2xlLnByaW50KGYiU2Nhbm5pbmcgcG9ydHMgb24ge3RhcmdldF9pcH0gd2l0aCBhIHRpbWVvdXQgb2Yge3RpbWVvdXR9IHNlY29uZHMgYW5kIHttYXhfd29ya2Vyc30gdGhyZWFkcy4uLiIsIHN0eWxlPSJib2xkIGdyZWVuIikKICAgIAogICAgb3Blbl9wb3J0cyA9IHNjYW5fcG9ydHModGFyZ2V0X2lwLCBwb3J0X3JhbmdlLCB0aW1lb3V0LCBtYXhfd29ya2VycykKICAgIAogICAgaWYgb3Blbl9wb3J0czoKICAgICAgICBjb25zb2xlLnByaW50KGYiT3BlbiBwb3J0cyBvbiB7dGFyZ2V0X2lwfTogeycsICcuam9pbihtYXAoc3RyLCBvcGVuX3BvcnRzKSl9Iiwgc3R5bGU9ImJvbGQgZ3JlZW4iKQogICAgZWxzZToKICAgICAgICBjb25zb2xlLnByaW50KGYiTm8gb3BlbiBwb3J0cyBmb3VuZCBvbiB7dGFyZ2V0X2lwfS4iLCBzdHlsZT0iYm9sZCB5ZWxsb3ciKQogICAgCiAgICBmaWxlX2Zvcm1hdCA9IFByb21wdC5hc2soIkVudGVyIHRoZSBmaWxlIGZvcm1hdCB0byBleHBvcnQgKHR4dCBvciBjc3YpIiwgZGVmYXVsdD0idHh0Iikuc3RyaXAoKQogICAgZXhwb3J0X3Jlc3VsdHModGFyZ2V0X2lwLCBvcGVuX3BvcnRzLCBmaWxlX2Zvcm1hdCkKICAgIGNvbnNvbGUucHJpbnQoIkNyZWF0ZWQgYnkgTmFobywgQW5vbktyeXB0aVF1eiwgQ29mZmlueHAgYW5kIEhleHNoMWRvdyIsIHN0eWxlPSJib2xkIG1hZ2VudGEiKQoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHRyeToKICAgICAgICBtYWluKCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjb25zb2xlLnByaW50KGYiQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZDoge2V9Iiwgc3R5bGU9ImJvbGQgcmVkIikKICAgICAgICBzeXMuZXhpdCgxKQo=').decode('utf-8'))
